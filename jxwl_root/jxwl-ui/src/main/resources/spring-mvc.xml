<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd"
	default-autowire="byName">

	<!-- 扫描controller（controller层注入） -->
	<context:component-scan base-package="com.c503.sc.jxwl.vehiclemonitor.controller" />
	<context:component-scan base-package="com.c503.sc.jxwl.transacation.controller" />
	<context:component-scan base-package="com.c503.sc.jxwl.pipelinemangnt.controller" />
	<context:component-scan base-package="com.c503.sc.jxwl.common" />
	<context:component-scan base-package="com.c503.sc.jxwl.zcpt.controller" />
	<context:component-scan base-package="com.c503.sc.jxwl.zcpt.monitor" />
	<context:component-scan base-package="com.c503.sc.ggyypt" />
	
	<mvc:annotation-driven validator="validator" content-negotiation-manager="contentNegotiationManager" />
	
	<!-- 加载国际化资源 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="fallbackToSystemLocale" value="false" />
		<!-- 不抛出NoSuchMessageException, 使用messageKey作为返回值 -->
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="basenames">
			<list>
				<value>classpath:/com/c503/sc/jxwl/common/i18n/common_msg</value>
				<value>classpath:/com/c503/sc/jxwl/vehiclemonitor/i18n/biz_msg</value>
				<value>classpath:/com/c503/sc/jxwl/pipelinemangnt/i18n/biz_msg</value>
				<value>classpath:/com/c503/sc/jxwl/transacation/i18n/biz_msg</value>
				<value>classpath:/com/c503/sc/jxwl/filemanage/i18n/biz_msg</value>
				<value>classpath:formbean/validation</value>
				<value>classpath:resturl</value>
				<value>classpath:fdfsclient</value>
				<value>classpath:template</value>
				<value>classpath:system</value>
				<value>classpath:redis</value>
			</list>
		</property>
	</bean>
	
	<!-- 自定义日志缓存 -->
	<bean id="resourceManager" class="com.c503.sc.log.caches.SpringBeanCaches">
		<property name="messageSource">
			<ref bean="messageSource" />
		</property>
	</bean>

	<!-- 验证器 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
		<property name="validationMessageSource">
		  <ref bean="messageSource" />
		</property>
	</bean>
	
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="false" />
		<property name="ignoreAcceptHeader" value="false" />
		<property name="mediaTypes">
			<value>
				atom=application/atom+xml
				html=text/html
				json=application/json
				*=*/*
			</value>
		</property>
	</bean>

	<!-- 避免IE在ajax请求时，返回json出现下载 -->
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonMessageConverter" />
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true" />

		<!-- 在没有扩展名时即: "/blog/1" 时的默认展现形式 -->
		<property name="defaultContentType" value="text/html" />

		<!-- 扩展名至mimeType的映射,即 /blog.json => application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="pdf" value="application/pdf" />
				<entry key="xsl" value="application/vnd.ms-excel" />
				<entry key="xml" value="application/xml" />
				<entry key="json" value="application/json" />
			</map>
		</property>

		<!-- 用于开启 /blog/123?format=json 的支持 -->
		<property name="favorParameter" value="false" />
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/view/" />
					<property name="suffix" value=".html"></property>
				</bean>
			</list>
		</property>
	</bean>
 
	<!-- 文件上传的配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" lazy-init="true">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize"   value="104857600"></property>
		<property name="maxInMemorySize" value="20971520"></property>
		<property name="resolveLazily"   value="true" />
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.c503.sc.jxwl.common.uac.AuthInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	
</beans>