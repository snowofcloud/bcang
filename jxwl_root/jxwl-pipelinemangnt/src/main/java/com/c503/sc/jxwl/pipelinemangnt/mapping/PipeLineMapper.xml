<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.c503.sc.jxwl.pipelinemangnt.dao.IPipeLineDao" >
  	<resultMap id="BaseResultMap" type="com.c503.sc.jxwl.pipelinemangnt.bean.PipeLineEntity" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PIPE_NO" property="pipeNo" jdbcType="VARCHAR" />
    <result column="PIPE_NAME" property="pipeName" jdbcType="VARCHAR" />
    <result column="DANGER_NAME" property="dangerName" jdbcType="VARCHAR" />
    <result column="DANGER_TYPE" property="dangerType" jdbcType="VARCHAR" />
    <result column="DUTY_PERSON" property="dutyPerson" jdbcType="VARCHAR" />
    <result column="FLOW" property="flow" jdbcType="DECIMAL" />
    <result column="TELEPHONE" property="telephone" jdbcType="VARCHAR" />
    <result column="STOCK_ALLOWANCE" property="stockAllowance" jdbcType="DECIMAL" />
    <result column="STOCK_VOLUME" property="stockVolume" jdbcType="DECIMAL" />
    <result column="PIPE_TYPE" property="pipeType" jdbcType="VARCHAR" />
    <result column="LIQUID_LEVEL" property="liquidLevel" jdbcType="DECIMAL" />
    <result column="MATERIAL" property="material" jdbcType="VARCHAR" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="REMOVE" property="remove" jdbcType="CHAR" />
  </resultMap>
  
    <resultMap id="BaseResultMap2" type="com.c503.sc.jxwl.pipelinemangnt.bean.PipeLineLocationEntity" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PIPE_NO" property="pipeNo" jdbcType="VARCHAR" />
    <result column="PIPE_TYPE" property="pipeType" jdbcType="VARCHAR" />
    <result column="POINTS" property="points" jdbcType="VARCHAR" />
    <result column="LONGITUDE" property="longitude" jdbcType="DECIMAL" />
    <result column="LATITUDE" property="latitude" jdbcType="DECIMAL" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE" />
    <result column="REMOVE" property="remove" jdbcType="CHAR" />
  </resultMap>
  
	<resultMap id="BaseResultMap3" type="com.c503.sc.jxwl.pipelinemangnt.bean.PipeLineStatusEntity" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="STOCK_ALLOWANCE" property="stockAllowance" jdbcType="DECIMAL" />
    <result column="LIQUID_LEVEL" property="liquiDlevel" jdbcType="DECIMAL" />
    <result column="STOCK_VOLUME" property="stockVolume" jdbcType="DECIMAL" />
    <result column="PIPE_TYPE" property="pipeType" jdbcType="VARCHAR" />
    <result column="FLOW" property="flow" jdbcType="DECIMAL" />
    <result column="PIPE_ID" property="pipeid" jdbcType="VARCHAR" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="REMOVE" property="remove" jdbcType="CHAR" />
  </resultMap>

	<sql id="Base_Column_List" >
    ID, 				PIPE_NO, 				PIPE_NAME, 			DANGER_NAME, 			DANGER_TYPE, 
    DUTY_PERSON, 		FLOW, 					TELEPHONE, 			STOCK_ALLOWANCE, 		STOCK_VOLUME,
    PIPE_TYPE, 			LIQUID_LEVEL, 			MATERIAL,	 		UPDATE_TIME,			REMOVE,
   	CREATE_BY, 			CREATE_TIME, 			UPDATE_BY,			ADDRESS
  </sql>

	<select id="findByParams" resultMap="BaseResultMap" parameterType="java.util.Map">
	select * from(select * from (select row_number() over(partition by
    t.pipe_no order by tm.create_time desc) rn,t.*, 
    tm.stock_allowance,tm.stock_volume,tm.liquid_level, tm.flow from
    t_Pipe_Manage t
   left join t_Pipe_Status tm
    ON tm.pipe_id = t.id) where rn = 1 ) tc where tc.rn = 1
	<if test="pipeType != null and pipeType != ''">
		AND TC.PIPE_TYPE = #{pipeType,jdbcType=VARCHAR}
	</if>
	<if test="pipeName != null and pipeName != ''">
		AND TC.PIPE_NAME LIKE
		CONCAT(CONCAT('%',#{pipeName,jdbcType=VARCHAR}),'%')
	</if>
	<if test="remove != null and remove != ''">
		AND TC.remove = #{remove,jdbcType=CHAR}
	</if>
	<if test="dangerName != null and dangerName != ''">
  AND TC.DANGER_NAME LIKE CONCAT(CONCAT('%',#{dangerName,jdbcType=VARCHAR}),'%')
 </if>

	</select> 

	<select id="findById" resultMap="BaseResultMap" parameterType="java.util.Map">
	  <!--   SELECT 
	       * from( SELECT 
	      
	        FROM T_PIPE_MANAGE TC WHERE  TC.REMOVE = '0'
		      <if test="pipeid != null and pipeid != ''">
		  	   AND TC.PIPE_ID = #{pipeid,jdbcType=VARCHAR}
		  	  </if>
		  	  order by create_time desc) where rownum = 1 -->
		  	  
		  	  
		  	  select  a.* from ( select t.*,tm.stock_allowance,tm.stock_volume,tm.liquid_level,tm.flow
  from t_Pipe_Manage t
  left join t_Pipe_Status tm
    ON tm.pipe_id = t.id WHERE  t.REMOVE = '0'
     <if test="pipeid != null and pipeid != ''">
		  	   AND t.ID = #{pipeid,jdbcType=VARCHAR}
		  	  
		  	  </if>
 
 order by tm.create_time desc )a where rownum =1
		  	  
	</select>
	
	<select id="findPipeLocations" resultMap="BaseResultMap2" parameterType="java.util.Map">
	    SELECT *
	        FROM  T_PIPE_LOCATION TC WHERE  TC.REMOVE = #{remove,jdbcType=VARCHAR}
	         <if test="id != null and id != ''">
	        AND TC.PIPE_NO = #{id,jdbcType=VARCHAR}
	        </if>
	</select>
	
	<select id="findLiquidSto" resultMap="BaseResultMap3" parameterType="java.util.Map">
	   SELECT 
	      
	       s.PIPE_TYPE,  NVL(s.STOCK_ALLOWANCE,0) AS STOCK_ALLOWANCE from T_PIPE_STATUS s where s.CREATE_TIME IN
	       ( SELECT  MIN(TC.CREATE_TIME)
	        FROM T_PIPE_STATUS TC WHERE  TC.REMOVE = '0'
		  	   <if test="pipeType != null and pipeType != ''">
		  	   AND TC.PIPE_TYPE = #{pipeType,jdbcType=VARCHAR}
		  	  </if>
		  	   <if test="pipeid != null and pipeid != ''">
		  	   AND TC.PIPE_ID = #{pipeid,jdbcType=VARCHAR}
		  	  </if>
		  	   <if test="startTime != null and startTime != ''">
		  	   AND TC.CREATE_TIME &gt;= to_date(#{startTime}, 'yyyy-mm-dd hh24:mi:Ss')

		  	  </if>
		  	   <if test="endTime != null and endTime != ''">
		  	   AND TC.CREATE_TIME &lt;= to_date(#{endTime}, 'yyyy-mm-dd hh24:mi:Ss')
		  	  </if>
		  	  <!--  AND TC.PIPE_NO in
		  	  (SELECT TC.PIPE_NO FROM T_PIPE_STATUS TC WHERE TC.ID = #{id,jdbcType=VARCHAR})
		  	   -->
		  	   GROUP BY to_char(TC.CREATE_TIME,'yyyy-mm-dd'))
	</select> 

 	<select id="findLiquid" resultMap="BaseResultMap3" parameterType="java.util.Map">
	   SELECT 
	       s.PIPE_TYPE,  NVL(s.FLOW,0) AS FLOW from T_PIPE_STATUS s where s.CREATE_TIME IN
	       ( SELECT  MIN(TC.CREATE_TIME)
	        FROM T_PIPE_STATUS TC WHERE  TC.REMOVE = '0'
		  	   <if test="pipeType != null and pipeType != ''">
		  	   AND TC.PIPE_TYPE = #{pipeType,jdbcType=VARCHAR}
		  	  </if>
		  	   <if test="pipeid != null and pipeid != ''">
		  	   AND TC.PIPE_ID = #{pipeid,jdbcType=VARCHAR}
		  	  </if>
		  	   <if test="startTime != null">
		  	   AND TC.CREATE_TIME &gt;= to_date(#{startTime}, 'yyyy-mm-dd hh24:mi:Ss')
		  	  </if>
		  	   <if test="endTime != null">
		  	   AND TC.CREATE_TIME &lt;= to_date(#{endTime}, 'yyyy-mm-dd hh24:mi:Ss')
		  	  </if>
		  	  <!--  AND TC.PIPE_NO in
		  	  (SELECT TC.PIPE_NO FROM T_PIPE_STATUS TC WHERE TC.ID = #{id,jdbcType=VARCHAR}) -->
		  	 
		  	     GROUP BY to_char(TC.CREATE_TIME,'yyyy-mm-dd HH24:mi'))
	</select> 

	<!--  <select id="findLiquid" resultMap="BaseResultMap3" parameterType="java.util.Map">
	select * from(select * from (select row_number() over(partition by create_time order by create_time desc) rn,T_PIPE_STATUS.* from 
	T_PIPE_STATUS) where rn = 1 ) tc where tc.rn = 1
	
	 <if test="pipeType != null and pipeType != ''">
		  	   AND TC.PIPE_TYPE = #{pipeType,jdbcType=VARCHAR}
		  	  </if>
		  	   <if test="pipeid != null and pipeid != ''">
		  	   AND TC.PIPE_ID = #{pipeid,jdbcType=VARCHAR}
		  	  </if>
		  	   <if test="startTime != null and startTime != ''">
		  	   AND TC.CREATE_TIME &gt;= #{startTime,jdbcType=VARCHAR}
		  	  </if>
		  	   <if test="endTime != null and endTime != ''">
		  	   AND TC.CREATE_TIME &lt; #{endTime,jdbcType=VARCHAR}
		  	  </if>
	
	</select> -->
	
</mapper>

