<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.c503.sc.filemanage.dao.IFastdfsFileDao">
	<resultMap id="BaseResultMap" type="com.c503.sc.filemanage.bean.FileInfoEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="FILE_GROUP"        property="fileGroup"       jdbcType="VARCHAR" />
		<result column="FILE_NAME"         property="fileName"        jdbcType="VARCHAR" />
		<result column="FILE_PATH"         property="filePath"        jdbcType="VARCHAR" />
		<result column="FILE_SIZE"         property="fileSize"        jdbcType="DECIMAL" />
		<result column="REMARK"            property="remark"          jdbcType="VARCHAR" />
		<result column="CREATE_BY"         property="createBy"        jdbcType="VARCHAR" />
		<result column="CREATE_TIME"       property="createTime"      jdbcType="TIMESTAMP" />
		<result column="UPDATE_BY"         property="updateBy"        jdbcType="VARCHAR" />
		<result column="UPDATE_TIME"       property="updateTime"      jdbcType="TIMESTAMP" />
		<result column="REMOVE"            property="remove"          jdbcType="CHAR" />
		<result column="FILE_CODE"         property="fileCode"        jdbcType="VARCHAR" />
		<result column="FILE_MAPPING_PATH" property="fileMappingPath" jdbcType="VARCHAR" />
	</resultMap>

  <sql id="Base_Column_List" >
    ID, FILE_GROUP, FILE_NAME, FILE_PATH, UPLOAD_TIME, CREATE_BY, CREATE_TIME, UPDATE_BY, 
    UPDATE_TIME, REMOVE, FILE_CODE, FILE_MAPPING_PATH, FILE_SIZE
  </sql>

  <insert id="saveOne" parameterType="com.c503.sc.filemanage.bean.FileInfoEntity" >
    INSERT INTO T_FILE_UPLOAD (ID, FILE_GROUP, FILE_NAME, 
      FILE_PATH, UPLOAD_TIME, CREATE_BY, 
      CREATE_TIME, UPDATE_BY, UPDATE_TIME, 
      REMOVE, FILE_CODE, FILE_MAPPING_PATH, 
      FILE_SIZE)
    VALUES (#{id,jdbcType=VARCHAR},     #{fileGroup,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{filePath,jdbcType=VARCHAR},     #{uploadTime,jdbcType=DATE},   #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR},  #{updateTime,jdbcType=TIMESTAMP}, 
      #{remove,jdbcType=CHAR},          #{fileCode,jdbcType=VARCHAR},  #{fileMappingPath,jdbcType=VARCHAR}, 
      #{fileSize,jdbcType=DECIMAL})
  </insert>

  <!-- 逻辑删除附件 -->
  <update id="remove" parameterType="Object">
    UPDATE T_FILE_UPLOAD SET
      REMOVE      = '1'
      UPDATE_TIME = sysdate,
      UPDATE_BY   = #{updateBy},
    <where>
      <foreach collection="ids" item="item" open="id IN (" close=")" separator=",">
        #{item}
      </foreach>
    </where>
  </update>

  <update id="update" parameterType="com.c503.sc.filemanage.bean.FileInfoEntity" >
    UPDATE T_FILE_UPLOAD SET 
      FILE_GROUP        = #{fileGroup,jdbcType=VARCHAR},
      FILE_NAME         = #{fileName,jdbcType=VARCHAR},
      FILE_PATH         = #{filePath,jdbcType=VARCHAR},
      UPLOAD_TIME       = #{uploadTime,jdbcType=DATE},
      UPDATE_BY         = #{updateBy,jdbcType=VARCHAR},
      UPDATE_TIME       = #{updateTime,jdbcType=TIMESTAMP},
      REMOVE            = #{remove,jdbcType=CHAR},
      FILE_CODE         = #{fileCode,jdbcType=VARCHAR},
      FILE_MAPPING_PATH = #{fileMappingPath,jdbcType=VARCHAR},
      FILE_SIZE         = #{fileSize,jdbcType=DECIMAL}
    WHERE ID = #{id,jdbcType=VARCHAR}
  </update>

	<!-- 根据id查询单条记录 -->
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String">
	  SELECT
		<include refid="Base_Column_List" />
	  FROM T_FILE_UPLOAD
	  WHERE ID = #{id} AND remove='0'
	</select>

	
	<select id="findByParams" parameterType="map" resultMap="BaseResultMap">
	  SELECT
	    <include refid="Base_Column_List"/>
	  FROM
	    T_FILE_UPLOAD
	  WHERE
	        remove        = #{remove}
	  <if test="orgFileName != null and orgFileName != ''">
        AND org_file_name = #{orgFileName}
	  </if>
	</select>

	<!-- ******************************************* 以下未用 ******************************************************** -->
	<!-- 根据id数组物理批量删除 -->
	<delete id="deleteByIds" parameterType="Object[]">
		delete from T_FILE_UPLOAD
		<where>
			<foreach collection="array" item="item" open="id in (" separator="," close=")">
				#{item}
			</foreach>
		</where>
	</delete>

</mapper>