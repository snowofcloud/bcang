<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- 扫描文件（自动将servicec层注入） -->
	<context:component-scan base-package="com.c503.sc.jxwl.orgdata.service" />
	
	<context:property-placeholder location="classpath:jdbc.properties" />

	
	
	<!-- 配置日志数据源 -->
	<bean id="logDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${log_jdbc_driverClassName}"></property>
		<property name="url"             value="${log_jdbc_url}"></property>
		<property name="username"        value="${log_jdbc_username}"></property>
		<property name="password"        value="${log_jdbc_password}"></property>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive"       value="${log_maxActive}"></property>
		<!-- 初始化连接大小 -->
		<property name="initialSize"     value="${log_initialSize}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${log_maxWait}"></property>
		<!-- 连接池最大空闲 -->
		<!--<property name="maxIdle" value="${log_maxIdle}"></property>-->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${log_minIdle}"></property>
		<!-- 自动清除无用连接 -->
		<property name="removeAbandoned"        value="${log_removeAbandoned}"></property>
		<!-- 清除无用连接的等待时间 -->
		<property name="removeAbandonedTimeout" value="${log_removeAbandonedTimeout}"></property>
		<!-- 连接属性 -->
		<property name="connectionProperties"   value="${log_connectionProperties}"></property>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis"    value="300000" />
	</bean>

	


<!-- 扫描嘉兴物流组织机构系统dao对应的mapper文件 -->
	<bean id="sqlSessionFactory4log" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="logDataSource" />
		<!--打印日志 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations">
		   <array>
				<value>classpath*:com/c503/sc/jxwl/orgdata/mapping/*.xml</value>
			</array>
		</property>
		<!-- <property name="plugins">
			<array>
				<ref bean="pageInterceptor" />
			</array>
		</property> -->
		<property name="configurationProperties">
			<props>
				<prop key="dialect">oracle</prop>
			</props>
		</property>
	</bean>

    <!-- 扫描嘉兴物流组织机构系统dao接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.c503.sc.jxwl.orgdata.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory4log" />
	</bean>

	<!-- 分页拦截 -->
	<!-- <bean id="pageInterceptor" class="com.c503.sc.jxwl.common.interceptor.PageInterceptor"></bean> -->

	<!-- 配置事务管理器 -->
	<bean id="transactionManager4log" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="logDataSource" />
	</bean>
	
	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager4log" />
	
	<!-- 拦截器方式配置事物 -->
	<!-- <tx:advice id="transactionAdvice4log" transaction-manager="transactionManager4log">
		<tx:attributes>
			<tx:method name="save*"        propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="batchSave*"   propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*"      propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="modify*"      propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="del*"         propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="remove*"      propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="change*"      propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="commit*"      propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="submit*"      propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="uploadFile*"  propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="send*"        propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="stop*"        propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="verify*"      propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="import*"      propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="handle*"      propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="public*"      propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="reportApply*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			
			<tx:method name="get*"         propagation="SUPPORTS" rollback-for="java.lang.Exception"/>
			<tx:method name="find*"        propagation="SUPPORTS" rollback-for="java.lang.Exception"/>
			<tx:method name="count*"       propagation="SUPPORTS" rollback-for="java.lang.Exception" />
			<tx:method name="export*"      propagation="SUPPORTS" rollback-for="java.lang.Exception" />
			<tx:method name="is*"          propagation="SUPPORTS" rollback-for="java.lang.Exception"/>
			<tx:method name="statistics*"  propagation="SUPPORTS" rollback-for="java.lang.Exception"/>

			<tx:method name="*"            propagation="SUPPORTS" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="transactionPointcut4log" expression="execution(* com.c503.sc.*.*.service.impl.*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut4log" advice-ref="transactionAdvice4log" />
	</aop:config> -->

	<!-- 读取配置文件properties -->
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath*:zcpt_config.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties"></property>
	</bean>

</beans>